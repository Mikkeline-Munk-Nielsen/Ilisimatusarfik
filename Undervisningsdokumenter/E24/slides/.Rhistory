x = "Weight (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal() +
scale_x_continuous(limits = c(1, 6), breaks = seq(1, 6, by = 1)) +
scale_y_continuous(limits = c(0, 40), breaks = seq(0, 40, by = 5))+
theme(
plot.title = element_text(size = 18),          # Ændrer titelstørrelsen
axis.title.x = element_text(size = 14),        # Ændrer størrelsen på x-aksetitlen
axis.title.y = element_text(size = 14),        # Ændrer størrelsen på y-aksetitlen
axis.text.x = element_text(size = 12),         # Ændrer størrelsen på x-akse tekst (ticks)
axis.text.y = element_text(size = 12))          # Ændrer størrelsen på y-akse tekst (ticks)
library(ggplot2)
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point(color="purple") +
labs(
title = "Relationship between Weight and Fuel Efficiency",
x = "Weight (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal() +
scale_x_continuous(limits = c(1, 6), breaks = seq(1, 6, by = 1)) +
scale_y_continuous(limits = c(0, 40), breaks = seq(0, 40, by = 5))+
theme(
plot.title = element_text(size = 18),          # Ændrer titelstørrelsen
axis.title.x = element_text(size = 14),        # Ændrer størrelsen på x-aksetitlen
axis.title.y = element_text(size = 14),        # Ændrer størrelsen på y-aksetitlen
axis.text.x = element_text(size = 12),         # Ændrer størrelsen på x-akse tekst (ticks)
axis.text.y = element_text(size = 12)) +  # Ændrer størrelsen på y-akse tekst (ticks)
coord_flip() # Roterer akserne
library(janitor)
tabyl(df, udd)
library(DescTools)
Mode(df$udd, na.rm = TRUE)
Mean(df$alder, na.rm = T)
Median(df$alder, na.rm=T)
quantile(df$alder, probs = c(0.25, 0.5, 0.75), na.rm = TRUE)
summary(df$alder)
Var(df$alder, na.rm = TRUE)
sd(df$alder, na.rm = TRUE)
t.test(df$alder)
ttest_resultat <- t.test(df$alder, mu = 42.8)
# Opret en data frame med de ønskede metrics i rækker
resultat_df <- data.frame(
Metric = c("Gennemsnit",                  # Gennemsnittet af prøven
"Test-statistik",              # Teststatistikken (t-værdien)
"P-værdi",                    # P-værdien med 4 decimaler
"Nedre konfidensinterval",      # Nedre konfidensinterval for konfidensintervallet
"Øvre konfidensinterval",       # Øvre konfidensinterval for konfidensintervallet
"Frihedsgrader"),             # Frihedsgrader (df)
Value = c(
round(ttest_resultat$estimate, 3),        # Gennemsnittet afrundet til 3 decimaler
round(ttest_resultat$statistic, 3),      # Teststatistikken afrundet til 3 decimaler
sprintf("%.3f", ttest_resultat$p.value), # P-værdi med 3 decimaler
round(ttest_resultat$conf.int[1], 3),    # Nedre konfidensinterval afrundet til 3 decimaler
round(ttest_resultat$conf.int[2], 3),    # Øvre konfidensinterval afrundet til 3 decimaler
round(ttest_resultat$parameter, 1)       # Frihedsgrader afrundet til 1 decimal
)
)
# Udskriv tabellen i konsollen
print(resultat_df)
# Eksporter tabellen til en CSV-fil
write.csv(resultat_df, "t_test_resultat.csv", row.names = FALSE)
# Udskriv tabellen i konsollen
print(resultat_df)
# Opret en data frame med de ønskede metrics i rækker
resultat_df <- data.frame(
Parameter = c("Gennemsnit",                  # Gennemsnittet af prøven
"Test-statistik",              # Teststatistikken (t-værdien)
"P-værdi",                    # P-værdien med 4 decimaler
"Nedre konfidensinterval",      # Nedre konfidensinterval for konfidensintervallet
"Øvre konfidensinterval",       # Øvre konfidensinterval for konfidensintervallet
"Frihedsgrader"),             # Frihedsgrader (df)
Værdi = c(
round(ttest_resultat$estimate, 3),        # Gennemsnittet afrundet til 3 decimaler
round(ttest_resultat$statistic, 3),      # Teststatistikken afrundet til 3 decimaler
sprintf("%.3f", ttest_resultat$p.value), # P-værdi med 3 decimaler
round(ttest_resultat$conf.int[1], 3),    # Nedre konfidensinterval afrundet til 3 decimaler
round(ttest_resultat$conf.int[2], 3),    # Øvre konfidensinterval afrundet til 3 decimaler
round(ttest_resultat$parameter, 1)       # Frihedsgrader afrundet til 1 decimal
)
)
# Udskriv tabellen i konsollen
print(resultat_df)
GL_perspektiver <- readRDS("C:/Users/mmn/Dropbox/Ilisimatusarfik/Undervisningsdokumenter/E24/slides/GL_perspektiver.rds")
View(GL_perspektiver)
df <- readRDS("Data/GL_perspektiver.rds")
df <- readRDS("Data/GL_perspektiver.rds")
df <- readRDS("Data/GL_perspektiver.rds")
getwd()
GL_perspektiver <- readRDS("C:/Users/mmn/Dropbox/Ilisimatusarfik/Undervisningsdokumenter/E24/slides/data/GL_perspektiver.rds")
GL_perspektiver <- readRDS("C:/Users/mmn/Dropbox/Ilisimatusarfik/Undervisningsdokumenter/E24/slides/data/GL_perspektiver.rds")
mtcars
summary(mtcars)
str(mtcars)
mtcars
iris
library(tidyverse)
library(gapminder)
install.packages(gapminder)
install.packages("gapminder")
df <- gapminder
glimpse(gapminder)
library(gapminder)
glimpse(gapminder)
df <- gapminder
View(df)
library(janitor)
names(df)
tabyl(df$country)
names(df)
df <- gapminder_unfiltered
View(df)
df <- gapminder
# Del 1: Udforskning af data
glimpse(gapminder) # Undersøg datasættets struktur
# Del 2: Data Wrangling
# Opgave 2: Filtrér for relevante lande
gapminder_subset <- gapminder %>%
filter(country %in% c("Denmark", "Iceland", "Canada", "United States"))
# Opgave 3: Vælg relevante kolonner
gapminder_subset <- gapminder_subset %>%
select(country, year, lifeExp, pop, gdpPercap)
# Opgave 4: Omdøb kolonner
gapminder_subset <- gapminder_subset %>%
rename(
befolkning = pop,
BNP_pr_indbygger = gdpPercap
)
# Opgave 5: Opret kolonnen BNP
gapminder_subset <- gapminder_subset %>%
mutate(BNP = BNP_pr_indbygger * befolkning)
# Opgave 6: Opret kolonnen `høj_indkomst`
gapminder_subset <- gapminder_subset %>%
mutate(høj_indkomst = ifelse(BNP_pr_indbygger > 30000, "Ja", "Nej"))
# Opgave 7: Opret kolonnen `livsforventningskategori`
gapminder_subset <- gapminder_subset %>%
mutate(livsforventningskategori = case_when(
lifeExp < 60 ~ "Lav",
lifeExp >= 60 & lifeExp < 75 ~ "Mellem",
lifeExp >= 75 ~ "Høj"
))
# Del 3: Opsummering af data
# Opgave 8: Gennemsnit og median livsforventning pr. land
opsummering_livsforventning <- gapminder_subset %>%
group_by(country) %>%
summarise(
gennemsnit_livsforventning = mean(lifeExp),
median_livsforventning = median(lifeExp)
)
# Opgave 9: Total befolkning og gennemsnitligt BNP pr. indbygger pr. livsforventningskategori
opsummering_BNP <- gapminder_subset %>%
group_by(livsforventningskategori) %>%
summarise(
samlet_befolkning = sum(befolkning),
gennemsnit_BNP_pr_indbygger = mean(BNP_pr_indbygger)
)
View(opsummering_livsforventning)
library(gapminder)
df <- gapminder
library(gapminder)
df <- gapminder
# Filtrér for de specifikke lande
df_filtered <- df %>%
filter(country %in% c("Iceland", "Canada", "United States", "Denmark", "Sweden", "Norway", "Finland")) %>%
select(country, year, lifeExp, pop, gdpPercap) %>% # Vælg relevante variabler
rename(
befolkning = pop, # Omdøb pop til befolkning
BNP_pr_indbygger = gdpPercap # Omdøb gdpPercap til BNP_pr_indbygger
) %>%
mutate(
BNP = BNP_pr_indbygger * befolkning, # Opret ny kolonne BNP
høj_indkomst = ifelse(BNP_pr_indbygger > 30000, "Ja", "Nej"), # Opret høj_indkomst
forventet_levetid = case_when( # Opret forventet_levetid
lifeExp < 60 ~ "Lav",
lifeExp >= 60 & lifeExp < 75 ~ "Mellem",
lifeExp >= 75 ~ "Høj"
)
)
# Gennemsnitlig levealder for hvert land
gennemsnit_livsforventning <- df_filtered %>%
group_by(country) %>%
summarise(gennemsnit_livsforventning = mean(lifeExp, na.rm = TRUE))
# Gennemsnitligt BNP pr. indbygger for hver livsforventningskategori
opsummering_BNP <- df_filtered %>%
group_by(forventet_levetid) %>%
summarise(
gennemsnit_BNP_pr_indbygger = mean(BNP_pr_indbygger, na.rm = TRUE)
)
# Filtrér for Danmark og USA i 2007
df_ttest <- df_filtered %>%
filter(country %in% c("Denmark", "United States"), year == 2007)
# Udfør t-test
t_test_result <- t.test(lifeExp ~ country, data = df_ttest)
# Filtrér for Danmark og USA i 2007
df_ttest <- df_filtered %>%
filter(country %in% c("Denmark", "United States"))
# Udfør t-test
t_test_result <- t.test(lifeExp ~ country, data = df_ttest)
# Print resultat
t_test_result
# Lav en krydstabel
chi_table <- table(df_filtered$forventet_levetid, df_filtered$høj_indkomst)
# Udfør chi²-test
chi_test_result <- chisq.test(chi_table)
# Print krydstabel og testresultat
chi_table
tabyl(forventet_levetid)
tabyl(df$forventet_levetid)
tabyl(df_filtered$forventet_levetid)
library(gapminder)
df <- gapminder
# Filtrér for de specifikke lande
df_filtered <- df %>%
filter(country %in% c("Iceland", "Canada", "Columbia", "Ghana", "Australia")) %>%
select(country, year, lifeExp, pop, gdpPercap) %>% # Vælg relevante variabler
rename(
befolkning = pop, # Omdøb pop til befolkning
BNP_pr_indbygger = gdpPercap # Omdøb gdpPercap til BNP_pr_indbygger
) %>%
mutate(
BNP = BNP_pr_indbygger * befolkning, # Opret ny kolonne BNP
høj_indkomst = ifelse(BNP_pr_indbygger > 30000, "Ja", "Nej"), # Opret høj_indkomst
forventet_levetid = case_when( # Opret forventet_levetid
lifeExp < 60 ~ "Lav",
lifeExp >= 60 & lifeExp < 75 ~ "Mellem",
lifeExp >= 75 ~ "Høj"
)
)
# Gennemsnitlig levealder for hvert land
gennemsnit_livsforventning <- df_filtered %>%
group_by(country) %>%
summarise(gennemsnit_livsforventning = mean(lifeExp, na.rm = TRUE))
# Gennemsnitligt BNP pr. indbygger for hver livsforventningskategori
opsummering_BNP <- df_filtered %>%
group_by(forventet_levetid) %>%
summarise(
gennemsnit_BNP_pr_indbygger = mean(BNP_pr_indbygger, na.rm = TRUE)
)
# Filtrér for Danmark og USA i 2007
df_ttest <- df_filtered %>%
filter(country %in% c("Ghana", "Iceland"))
# Udfør t-test
t_test_result <- t.test(lifeExp ~ country, data = df_ttest)
# Print resultat
t_test_result
# Lav en krydstabel
chi_table <- table(df_filtered$forventet_levetid, df_filtered$høj_indkomst)
# Udfør chi²-test
chi_test_result <- chisq.test(chi_table)
# Print krydstabel og testresultat
chi_table
chi_test_result
library(tidyverse)
df_ESS <- readRDS("Data/ESS.rds") # Her hentes datasættet  # Her hentes datasættet fra en undermappe i min projektmappe, der hedder Data.
df_ESS <- df_ESS %>% select(koen, land, alder, udd, net_indkomst)
library(tidyverse)
df_ESS <- readRDS("Data/ESS.rds") # Her hentes datasættet  # Her hentes datasættet fra en undermappe i min projektmappe, der hedder Data.
head(df_ESS)
df_ESS %>% group_by(udd) %>% head()
df_ESS %>% group_by(udd) %>%
summarise(Gennemsnitsindkomst = mean(net_indkomst, na.rm = TRUE),
N = n())
df_ESS %>% group_by(udd) %>%
summarise(Gennemsnitsindkomst = mean(net_indkomst, na.rm = TRUE),
N = n())
head(df_ESS)
glimpse(df_ESS)
df <- readRDS("Data/ESS.rds")
df <- readRDS("Data/ESS.rds")
df <- ESS %>% select(net_indkomst, udd_aar, alder, fagforeningsmedlem) %>% na.omit()
library(tidyverse)
df <- ESS %>% select(net_indkomst, udd_aar, alder, fagforeningsmedlem) %>% na.omit()
ESS <- readRDS("Data/ESS.rds")
df <- ESS %>% select(net_indkomst, udd_aar, alder, fagforeningsmedlem) %>% na.omit()
model1 <- lm(net_indkomst ~ udd_aar, data = df)
library(texreg)
model1 <- lm(net_indkomst ~ udd_aar, data = df)
library(texreg)
(texreg::screenreg(list(model1), include.ci=F))
df <- ESS %>% filter(ESS, land=="DK") %>% select(net_indkomst, udd_aar, alder, fagforeningsmedlem) %>% na.omit()
library(tidyverse)
ESS <- readRDS("Data/ESS.rds")
df <- ESS %>% filter(ESS, land=="DK") %>% select(net_indkomst, udd_aar, alder, fagforeningsmedlem) %>% na.omit()
ESS <- readRDS("Data/ESS.rds")
df <- ESS %>% filter(ESS, land=="DK") %>%
select(net_indkomst, udd_aar, alder, fagforeningsmedlem) %>%
na.omit()
df <- ESS %>% filter(land=="DK") %>%
select(net_indkomst, udd_aar, alder, fagforeningsmedlem) %>%
na.omit()
library(tidyverse)
ESS <- readRDS("Data/ESS.rds")
df <- ESS %>% filter(land=="DK") %>%
select(net_indkomst, udd_aar, alder, fagforeningsmedlem) %>%
na.omit()
model1 <- lm(net_indkomst ~ udd_aar, data = df)
library(texreg)
(texreg::screenreg(list(model1), include.ci=F))
model1 <- lm(net_indkomst ~ udd_aar, data = df)
library(texreg)
(texreg::screenreg(list(model1), include.ci=F))
model2 <- lm(net_indkomst ~ udd_aar, data = df)
library(texreg)
(texreg::screenreg(list(model2), include.ci=F))
model2 <- lm(net_indkomst ~ udd_aar + alder, data = df)
library(texreg)
(texreg::screenreg(list(model2), include.ci=F))
model2 <- lm(net_indkomst ~ udd_aar + alder, data = df)  library(texreg) (texreg::screenreg(list(model1, model2), include.ci=F))
model2 <- lm(net_indkomst ~ udd_aar + alder, data = df)
(texreg::screenreg(list(model1, model2), include.ci=F))
model2 <- lm(net_indkomst ~ udd_aar + alder, data = df)
(texreg::screenreg(list(model1, model2), include.ci=F))
model2 <- lm(net_indkomst ~ udd_aar + alder, data = df)
(texreg::screenreg(list(model1, model2), include.ci=F))
model2 <- lm(net_indkomst ~ udd_aar + alder, data = df)
(texreg::screenreg(list(model1, model2), include.ci=F))
View(df)
View(ESS)
library(ggplot2)
ggplot(df) +
aes(x = aar_udd, y = net_indkomst) +
geom_point() +
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
library(ggplot2)
ggplot(df) +
aes(x = aar_udd, y = net_indkomst) +
geom_point() +
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
ggplot(df) +
aes(x = udd_aar, y = net_indkomst) +
geom_point() +
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
library(ggplot2)
ggplot(df) +
aes(x = udd_aar, y = net_indkomst) +
geom_point() +
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "",
y = ""
) +
theme_minimal()
ggplot(df) +
aes(x = udd_aar, y = net_indkomst) +
geom_point() +
geom_smooth(method = "lm", color = "blue", se = FALSE) +  # Tilføjer en lineær regressionslinje
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "MPG"
) +
theme_minimal()
ggplot(df) +
aes(x = udd_aar, y = net_indkomst) +
geom_point() +
labs(
x = "Års uddannelse",
y = "Indkomst (netto)"
) +
theme_minimal()
ggplot(df) +
aes(x = udd_aar, y = net_indkomst) +
geom_point() +
labs(
x = "Års uddannelse",
y = "Indkomst (netto)"
) + ylim(0, 50000) +
theme_minimal()
ggplot(df) +
aes(x = udd_aar, y = net_indkomst) +
geom_point() +
labs(
x = "Års uddannelse",
y = "Indkomst (netto)"
) + ylim(0, 50000) +
theme_minimal() +
geom_smooth(method = "lm", color = "blue", se = FALSE)
ggplot(df) +
aes(x = udd_aar, y = net_indkomst) +
geom_point() +
labs(
x = "Års uddannelse",
y = "Indkomst (netto)"
) + ylim(0, 50000) +
theme_minimal() +
geom_smooth(method = "lm", color = "blue", se = FALSE)
library(tidyverse)
ESS <- readRDS("Data/ESS.rds")
df <- ESS %>% filter(land=="DK") %>%
select(net_indkomst, udd_aar, alder, fagforeningsmedlem) %>%
na.omit()
library(ggplot2)
ggplot(df) +
aes(x = udd_aar, y = net_indkomst) +
geom_point() +
labs(
x = "Års uddannelse",
y = "Indkomst (netto)"
) + ylim(0, 50000) +
theme_minimal()
ggplot(df) +
aes(x = udd_aar, y = net_indkomst) +
geom_point() +
labs(
x = "Års uddannelse",
y = "Indkomst (netto)"
) + ylim(0, 50000) +
theme_minimal() +
geom_smooth(method = "lm", color = "blue", se = FALSE)
library(tidyverse)
ESS <- readRDS("Data/ESS.rds")
df <- ESS %>% filter(land=="DK") %>%
select(net_indkomst, udd_aar, alder, fagforeningsmedlem) %>%
na.omit()
model2 <- lm(net_indkomst ~ udd_aar + alder, data = df)
(texreg::screenreg(list(model1, model2), include.ci=F))
387*15
9767 +5805
getwd() # Denne kommando fortæller dig, hvilken mappe du arbejder i lige nu.
df <- readRDS("Data/ESS.rds") # Her hentes datasættet
getwd() # Denne kommando fortæller dig, hvilken mappe du arbejder i lige nu.
df <- readRDS("C:/Users/mmn/Dropbox/Ilisimatusarfik/Undervisningsdokumenter/F24/Data/ESS.rds") # Her hentes datasættet
getwd() # Denne kommando fortæller dig, hvilken mappe du arbejder i lige nu.
df <- readRDS("C:/Users/mmn/Dropbox/Ilisimatusarfik/R/Data/ESS.rds") # Her hentes datasættet
getwd() # Denne kommando fortæller dig, hvilken mappe du arbejder i lige nu.
df <- readRDS("C:/Users/mmn/Dropbox/Ilisimatusarfik/R/Ilisimatusarfik_Statistik_EO_F24/Data/ESS.rds") # Her hentes datasættet
library(tidyverse)
df <- filter(df, land=="DK")
View(df)
names(df)
df <- df %>% select(net_indkomst, antal_timer_arb, udd_aar) %>% na.omit()
library(broom)
library(broom)
model1 <- lm(net_indkomst ~ antal_timer_arb, data = df)
tidy(model1)
#summary(model1)
tidy(model1)
(texreg::screenreg(list(model1), include.ci=F))
model1 <- lm(net_indkomst ~ udd_aar +antal_timer_arb, data = df)
(texreg::screenreg(list(model1), include.ci=F))
library(ggplot2)
ggplot(df) +
aes(x = udd_aar, y = net_indkomst) +
geom_point() +
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
getwd() # Denne kommando fortæller dig, hvilken mappe du arbejder i lige nu.
df <- readRDS("C:/Users/mmn/Dropbox/Ilisimatusarfik/R/Ilisimatusarfik_Statistik_EO_F24/Data/ESS.rds") # Her hentes datasættet
library(tidyverse)
df <- filter(df, land=="DK")
df <- df %>% select(net_indkomst, antal_timer_arb, udd_aar) %>% na.omit()
library(ggplot2)
ggplot(df) +
aes(x = udd_aar, y = net_indkomst) +
geom_point() +
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
library(ggplot2)
ggplot(df) +
aes(x = udd_aar, y = net_indkomst) +
geom_point() +
labs(
title = "Sammenhæng mellem antal års uddannelse og indkomst",
x = "Antal års uddannelse",
y = "Indkomst DKK (netto)"
) +
theme_minimal()
cor.test(df$udd_aar, df$net_indkomst)
ggplot(df) +
aes(x = udd_aar, y = net_indkomst) +
geom_point() +
labs(
title = "Sammenhæng mellem antal års uddannelse og indkomst",
x = "Antal års uddannelse",
y = "Indkomst DKK (netto)"
) +
theme_minimal() +
geom_smooth(method = "lm", color = "blue", se = FALSE)
library(texreg)
model1 <- lm(net_indkomst ~ udd_aar +antal_timer_arb, data = df)
model1 <- lm(net_indkomst ~ udd_aar, data = df)
(texreg::screenreg(list(model1), include.ci=F))
10650.70 + 395.24*15
model2 <- lm(net_indkomst ~ udd_aar +antal_timer_arb, data = df)
(texreg::screenreg(list(model1, model2), include.ci=F))
2057.61+(362.01*13)+(251.75*40)
2057.61+(362.01*18)+(251.75*40)
