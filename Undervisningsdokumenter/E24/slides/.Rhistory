) + coord_fixed(ratio = 200000)  # Justér på højden af boksplottet
ggplot(df, aes(x = omsaetning)) + # Variabel = omsaetning
geom_boxplot() +  # Opretter et boxplot
theme_minimal() + # Tema
scale_x_continuous(breaks = # Definerer x-aksen
seq(min(50000),
max(1000000),
by = 100000)) +
labs(
x = "Omsætning (DKK)") + # Tilføjer en brugerdefineret titel til x-aksen
theme(
axis.text.y = element_blank(),  # Fjerner værdierne på y-aksen
axis.ticks.y = element_blank(),  # Fjerner stregmarkeringer på y-aksen
text = element_text(size = 12)  # Gør skriften større
) + coord_fixed(ratio = 300000)  # Justér på højden af boksplottet
ggplot(df, aes(x = industri)) +
geom_bar(fill = "#003366", na.rm = FALSE) +
labs(
x = "Industri",
y = "Frekvens") +
theme(
text = element_text(size = 14)) +  # Gør skriften større
```
ggplot(df, aes(x = industri)) +
geom_bar(fill = "#003366", na.rm = FALSE) +
labs(
x = "Industri",
y = "Frekvens") +
theme(
text = element_text(size = 14))  # Gør skriften større
ggplot(df, aes(x = industri)) +
geom_bar(aes(y = (..count..) / sum(..count..) * 100),
fill = "#003366", na.rm = FALSE) +
labs(
x = "Industri",
y = "Procent") +
theme(
text = element_text(size = 14))  # Gør skriften større
# Opret barplot med de rigtige aldersgrupper på x-aksen
ggplot(df, aes(x = ansatte_gruppe)) +
geom_bar(aes(y = cumsum(..count..) / sum(..count..) * 100),
stat = "count", fill = "#003366") +
labs(
x = "Ansatte",
y = "Kumulativ andel") +
scale_x_discrete(drop = FALSE) +
ggplot(df, aes(x = industri)) +
geom_bar(aes(y = (..count..) / sum(..count..) * 100),
fill = "#003366", na.rm = FALSE) +
labs(
x = "Industri",
y = "Procent") +
theme(
text = element_text(size = 14))  # Gør skriften større
df <- df %>%
mutate(ansatte_gruppe = case_when(
ansatte <= 1000 ~ "0 - 1k",
ansatte > 1000 & ansatte <= 2000 ~ "1k - 2k",
ansatte > 2000 & ansatte <= 3000 ~ "2k - 3k",
ansatte > 3000 & ansatte <= 4000 ~ "3k - 4k",
ansatte > 4000 ~ "4k+"
))
# Opret barplot med de rigtige aldersgrupper på x-aksen
ggplot(df, aes(x = ansatte_gruppe)) +
geom_bar(aes(y = cumsum(..count..) / sum(..count..) * 100),
stat = "count", fill = "#003366") +
labs(
x = "Ansatte",
y = "Kumulativ andel") +
scale_x_discrete(drop = FALSE)  # Vis alle kategorier
# Opret barplot med de rigtige aldersgrupper på x-aksen
ggplot(df, aes(x = ansatte_gruppe)) +
geom_bar(aes(y = cumsum(..count..) / sum(..count..) * 100),
stat = "count", fill = "#003366") +
labs(
x = "Ansatte",
y = "Kumulativ andel") +
scale_x_discrete(drop = FALSE) + # Vis alle kategorier
theme(
text = element_text(size = 14))  # Gør skriften større
df <- df %>%
mutate(ansatte_gruppe = case_when(
ansatte <= 1000 ~ "0 - 1k",
ansatte > 1000 & ansatte <= 2000 ~ "1k - 2k",
ansatte > 2000 & ansatte <= 3000 ~ "2k - 3k",
ansatte > 3000 & ansatte <= 4000 ~ "3k - 4k",
ansatte > 4000 ~ "4k+"
))
library(ggplot2)
library(dplyr)
df <- df %>%
mutate(ansatte_gruppe = case_when(
ansatte <= 1000 ~ "0 - 1k",
ansatte > 1000 & ansatte <= 2000 ~ "1k - 2k",
ansatte > 2000 & ansatte <= 3000 ~ "2k - 3k",
ansatte > 3000 & ansatte <= 4000 ~ "3k - 4k",
ansatte > 4000 ~ "4k+"
))
# Opret barplot med de rigtige aldersgrupper på x-aksen
ggplot(df, aes(x = ansatte_gruppe)) +
geom_bar(aes(y = cumsum(..count..) / sum(..count..) * 100),
stat = "count", fill = "#003366") +
labs(
x = "Ansatte",
y = "Kumulativ andel") +
scale_x_discrete(drop = FALSE) + # Vis alle kategorier
theme(
text = element_text(size = 14))  # Gør skriften større
data <- c(3, 5, 7, 8, 10, 12, 15, 18, 20, 25)
mean(data)
var(data)
data <- c(3, 5, 7, 8, 10, 12, 15, 18, 20, 25)
mean(data)
var(data)
sd(df$omsaetning, na.rm=T)
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point()
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point()
# Ændring af farver og tema
ggplot(data = mtcars) +
aes(x = wt, y = mpg, color = cyl) +  # Farve efter antal cylindre
geom_point() +
theme_minimal()  # Anvend minimal tema
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
labs(
title = "Forhold mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
)
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
labs(
title = "Forhold mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
)
# Minimal tema
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
theme_minimal()
# Minimal tema
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
theme_minimal()
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
labs(
title = "Forhold mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon") +
theme_minimal()
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
labs(
title = "Forhold mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon") +
theme_dark()
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point()
```{r echo=T}
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point(color="blue") +
labs(
title = "Forhold mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon") +
theme_minimal()
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point(color="pink") +
labs(
title = "Forhold mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon") +
theme_minimal()
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point(color="green") +
labs(
title = "Forhold mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon") +
theme_minimal()
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point(color="purple") +
labs(
title = "Forhold mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon") +
theme_minimal()
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point(color="purple") +
labs(
title = "Forhold mellem vægt og brændstoføkonomi",
x = "Weight (1000 lbs)",
y = "Miles per gallon") +
theme_minimal()+
scale_x_continuous(limits = c(1, 6), breaks = seq(1, 6, by = 1))
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point(color="purple") +
labs(
title = "Forhold mellem vægt og brændstoføkonomi",
x = "Weight (1000 lbs)",
y = "Miles per gallon") +
theme_minimal()+
scale_x_continuous(limits = c(1, 6), breaks = seq(1, 6, by = 1)) +
scale_y_continuous(limits = c(0, 40), breaks = seq(0, 40, by = 5)) +
```
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point(color="purple") +
labs(
title = "Forhold mellem vægt og brændstoføkonomi",
x = "Weight (1000 lbs)",
y = "Miles per gallon") +
theme_minimal()+
scale_x_continuous(limits = c(1, 6), breaks = seq(1, 6, by = 1)) +
scale_y_continuous(limits = c(0, 40), breaks = seq(0, 40, by = 5))
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point(color="purple") +
labs(
title = "Relationship between Weight and Fuel Efficiency",
x = "Weight (1000 lbs)",
y = "Miles per gallon") +
theme_minimal()+
scale_x_continuous(limits = c(1, 6), breaks = seq(1, 6, by = 1)) +
scale_y_continuous(limits = c(0, 40), breaks = seq(0, 40, by = 5))
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point(color="purple") +
labs(
title = "Relationship between Weight and Fuel Efficiency",
x = "Weight (1000 lbs)",
y = "Miles per gallon") +
theme_minimal()+
scale_x_continuous(limits = c(1, 6), breaks = seq(1, 6, by = 1)) +
scale_y_continuous(limits = c(0, 40), breaks = seq(0, 40, by = 5))
ggplot(data = mtcars) +
aes(x = wt, y = mpg) +
geom_point(color="purple") +
labs(
title = "Relationship between Weight and Fuel Efficiency",
x = "Weight (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal() +
scale_x_continuous(limits = c(1, 6), breaks = seq(1, 6, by = 1)) +
scale_y_continuous(limits = c(0, 40), breaks = seq(0, 40, by = 5))+
theme(
plot.title = element_text(size = 18),          # Ændrer titelstørrelsen
axis.title.x = element_text(size = 14),        # Ændrer størrelsen på x-aksetitlen
axis.title.y = element_text(size = 14),        # Ændrer størrelsen på y-aksetitlen
axis.text.x = element_text(size = 12),         # Ændrer størrelsen på x-akse tekst (ticks)
axis.text.y = element_text(size = 12)) +  # Ændrer størrelsen på y-akse tekst (ticks)
coord_flip()
names(car)
names(mtcars)
ggplot(mtcars) +
aes(x = factor(cyl)) +  # Omform cyl til en kategorisk variabel
geom_bar() +
labs(
title = "Antal biler pr. cylinder",
x = "Antal cylindre",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl)) +  # Omform cyl til en kategorisk variabel
geom_bar() +
labs(
title = "Antal biler pr. cylinder",
x = "Antal cylindre",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = mpg) +
geom_histogram(binwidth = 2, fill = "#003366") +
labs(
title = "Histogram af brændstoføkonomi (mpg)",
x = "Miles per gallon",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = mpg) +
geom_histogram(binwidth = 2, fill = "#003366", color = "black") +
labs(
title = "Histogram af brændstoføkonomi (mpg)",
x = "Miles per gallon",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = mpg) +
geom_histogram(binwidth = 2, fill = "#003366", color = "black") +
labs(
title = "Histogram af brændstoføkonomi",
x = "Miles per gallon (mpg)",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl), fill = factor(gear)) +
geom_bar(position = "dodge") +
labs(
title = "Fordeling af biler pr. cylinder og gear",
x = "Antal cylindre",
y = "Antal biler",
fill = "Antal gear"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl), fill = factor(gear)) +
geom_bar(position = "dodge") +
labs(
title = "Fordeling af biler pr. cylinder og gear",
x = "Antal cylindre",
y = "Antal biler",
fill = "Antal gear"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl), y = factor(gear)) +
geom_jitter(width = 0.2, height = 0.2) +
labs(
title = "Spredning af biler mellem cylinder og gear",
x = "Antal cylindre",
y = "Antal gear"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl), y = factor(gear)) +
geom_jitter(width = 0.2, height = 0.2) +
labs(
title = "Spredning af biler mellem cylinder og gear",
x = "Antal cylindre",
y = "Antal gear"
)
ggplot(mtcars) +
aes(x = factor(cyl), y = mpg) +
geom_boxplot() +
labs(
title = "Brændstoføkonomi pr. cylinder",
x = "Antal cylindre",
y = "Miles per gallon"
) +
theme_minimal()
tabyl(mtcars$cyl)
ggplot(mtcars) +
aes(x = wt, y = mpg) +
geom_point(color = "purple") +
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl), fill = factor(gear)) +
geom_bar(position = "dodge") +
labs(
title = "Fordeling af biler pr. cylinder og gear",
x = "Antal cylindre",
y = "Antal biler",
fill = "Antal gear"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl), y = factor(am)) +
geom_point(size = 3) +
labs(
title = "Scatterplot af cylindre og gearkassetype",
x = "Antal cylindre",
y = "Gearkassetype (0 = Automatisk, 1 = Manuel)"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl), y = factor(am)) +
geom_point(size = 3) +
labs(
title = "Scatterplot af cylindre og gearkassetype",
x = "Antal cylindre",
y = "Gearkassetype (0 = Automatisk, 1 = Manuel)"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl), y = factor(gear)) +
geom_jitter(width = 0.2, height = 0.2) +
labs(
title = "Spredning af biler mellem cylinder og gear",
x = "Antal cylindre",
y = "Antal gear"
)
ggplot(mtcars) +
aes(x = factor(cyl), fill = factor(gear)) +
geom_bar(position = "dodge") +
labs(
title = "Fordeling af biler pr. cylinder og gear",
x = "Antal cylindre",
y = "Antal biler",
fill = "Antal gear"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl), y = mpg) +
geom_boxplot() +
labs(
title = "Brændstoføkonomi pr. cylinder",
x = "Antal cylindre",
y = "Miles per gallon"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
geom_smooth(method = "lm", color = "blue", se = FALSE) +  # Tilføjer en lineær regressionslinje
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
(df_firma)
mit_foerste_objekt <- "Hello world!"
mit_foerste_objekt
mit_tal <- 2
mit_tal + 2
resultat <- mit_tal + 2
resultat
max(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
# Create the mock dataset
set.seed(123)
# Create a list of industry categories
industries <- c("Teknologi", "Sundhed", "Finans", "Detail", "Produktion")
# Create the mock dataset with the industry column
firma_data <- data.frame(
navn = paste("Firm", 1:1000),  # Firm names as "Firm 1", "Firm 2", etc.
industri = sample(industries, 10, replace = TRUE),  # Randomly assign an industry to each firm
ansatte = sample(10:5000, 10, replace = TRUE),  # Random number of employees between 50 and 500
omsaetning = round(runif(10, 30000, 1000000), 2),  # Random sales between 100,000 and 1,000,000
tilfredshed = sample(1:5, 10, replace = TRUE)  # Random satisfaction on a 5-point Likert scale
)
firma_data$tilfredshed <- factor(firma_data$tilfredshed,
levels = 1:5,
labels = c("Meget utilfreds", "Utilfreds", "Neutral", "Tilfreds", "Meget tilfreds"), ordered = T)
firma_data$industri <- factor(firma_data$industri, ordered = FALSE)
saveRDS(firma_data, file = "firma_data.rds")
df_firma <- readRDS("firma_data.rds")
(df_firma)
getwd()
# Load necessary libraries
library(ggplot2)
# Define the sample size and insecurity data for a 95% confidence interval
sample_size <- c(50, 100, 250, 500, 750, 1000, 1500, 2000, 5000, 10000)
insecurity_95ci <- c(6.0, 4.3, 2.7, 1.9, 1.6, 1.4, 1.1, 1.0, 0.6, 0.4)
# Create a data frame
data_95ci <- data.frame(
SampleSize = sample_size,
Insecurity = insecurity_95ci
)
# Plot the data
ggplot(data_95ci, aes(x = SampleSize, y = Insecurity)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "blue", size = 2) +
scale_x_log10() +  # Log scale for sample size
labs(
title = "Statistisk usikkerhed som funktion af stikprøvestørrelse (95% CI)",
x = "Stikprøvestørrelse (n)",
y = "Usikkerhed (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
)
