geom_point() +
labs(x = "Alder",
y = "Netto indkomst"))
# Gem plottet på din computer som en png fil (billede fil)
ggsave("Scatterplot_indkomst_alder.png",
scatterplot, width = 8, height = 6, units = "in", dpi = 300)
model3 <- lm(net_indkomst ~ koen + poly(alder,2, raw=T), data=df)
(texreg::screenreg(list(model1, model2, model3), include.ci = FALSE))
df <- df %>%
mutate(
udd = factor(udd, ordered = FALSE))
model4 <- lm(net_indkomst ~ koen + poly(alder, 2, raw=T) + udd, data = df)
tidy(model4)
#Print
(texreg::screenreg(list(model1, model2, model3, model4), include.ci = FALSE))
f_test <- anova(model3, model4)
print(f_test)
(texreg::screenreg(list(model1, model2, model3, model4), include.ci = FALSE))
f_test <- anova(model3, model4)
print(f_test)
# Print p-værdi uden "scientific notation"
format.pval(f_test$p.value, digits = 4, scientific = FALSE)
View(f_test)
print(f_test)
install.packages("estimatr")
#install.packages("estimatr")
library(estimatr)
model_robust <- lm_robust(net_indkomst ~ koen + poly(alder, 2) + udd, data = df)
tidy(model_robust)
tidy(model4)
model_robust <- lm_robust(net_indkomst ~ koen + poly(alder, 2, raw=T) + udd, data = df)
tidy(model_robust)
names(df)
model5 <- lm(net_indkomst ~koen+udd_aar, data=df)
tidy(model5)
(texreg::screenreg(list(model15), include.ci = FALSE))
(texreg::screenreg(list(model5), include.ci = FALSE))
```{r warning=F, message=F}
model6 <- lm(net_indkomst ~ koen*udd_aar, data = df)
(texreg::screenreg(list(model5, model6), include.ci = FALSE))
(texreg::screenreg(list(model5, model6), include.ci = FALSE))
18839.63-2359.08
(texreg::screenreg(list(model4, model_robust), include.ci = FALSE))
tidy(model_robust)
(texreg::screenreg(list(model4, model_robust), include.ci = FALSE))
getwd() # Denne kommando fortæller dig, hvilken mappe du arbejder i lige nu.
df <- readRDS("Data/ESS.rds") # Her hentes datasættet
library(tidyverse)
df <- filter(df, land=="DK")
df <- df %>% select(net_indkomst, koen, udd_aar, ansaettelse_type) %>% na.omit()
library(janitor)
df %>% tabyl(koen)
glimpse(df$koen)
library(broom)
model1 <- lm(net_indkomst ~ koen, data = df)
tidy(model1)
summary(model1)
t.test(net_indkomst ~ koen, data=df)
glimpse(df$udd_aar)
model2 <- lm(net_indkomst ~ koen + udd_aar, data = df)
getwd()
getwd()
# Her der kan vi skrive tekst
2+2
2+2
2+2
2+2
2+2
2+2
2+2
# Øvelse i objekter:
# Øvelse i objekter:
# Øvelse i objekter:
navn <- "Mikkeline"
navn
alder <- 27
alder
alder+10
# Øvelse i objekter:
navn <- "Mikkeline"
# Øvelse i objekter:
navn <- "Mikkeline"
alder <- 27
# Øvelse i objekter:
navn <- "Mikkeline"
alder <- 27
::p_load(tidyverse, dplyr, tidyr, haven, ggplot2, janitor, tibble, haven)
pacman::p_load(tidyverse, dplyr, tidyr, haven, ggplot2, janitor, tibble, haven)
df <- read_dta("C:/Users/mmn/Dropbox/Ilisimatusarfik/R/Ilisimatusarfik_Statistik_EO_F24/Data/ESS2/ESS2.dta")
View(df)
df <- df %>%
filter(cntry == "NO")
tabyl(df$trstun)
tabyl(df$happy)
tabyl(df$polintr)
tabyl(df, polintr, trstun)
tabyl(df, polintr, trstun) %>%
adorn_totals(where = c("row", "col")) %>%
adorn_percentages() %>%
adorn_pct_formatting(digits = 1)
df <- read_dta("C:/Users/mmn/Dropbox/Ilisimatusarfik/R/Ilisimatusarfik_Statistik_EO_F24/Data/ESS2/ESS2.dta")
tabyl(df$cntry)
df <- df %>%
filter(cntry == "NO")
df <- df %>% select(polintr, trstun, gndr, agea)
missing_values <- colSums(is.na(df))
missing_df <- data.frame(variable = names(missing_values), count = missing_values)
# Plot missing values
ggplot(missing_df, aes(x = variable, y = count)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Missing Values by Variable",
x = "Variables",
y = "Number of Missing Values") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text(aes(label = count), vjust = -0.3)  # Add labels on top of bars
##### Erase all missing values
columns_no_na <- c(1, 2, 3, 4)
df <- df[complete.cases(df[, columns_no_na]), ]
tabyl(df$polintr)
# Reverse scale
df$interesse <- df %>% ifelse(polintr %in% 1:4, 5 - polintr, polintr)
# Reverse scale
df$interesse <- df %>% ifelse(df$polintr %in% 1:4, 5 - df$polintr, df$polintr)
# Reverse scale
df <- df %>% mutate(
polint = ifelse(polintr %in% 1:4, 5 - polintr, polintr), # reverse scale
)
tabyl(df$trstun)
df_clean <- df %>%
transmute(
alder = agea,
polint = ifelse(polintr %in% 1:4, 5 - polintr, polintr), # reverse scale
tillid_fn = trstun,
kon = case_when(
gndr == 1 ~	"Mand",
nwsptot == 2 ~	"Kvinde",
TRUE ~ as.factor(NA))
)
df_clean <- df %>%
transmute(
alder = agea,
polint = ifelse(polintr %in% 1:4, 5 - polintr, polintr), # reverse scale
tillid_fn = trstun,
kon = case_when(
gndr == 1 ~	"Mand",
gndr == 2 ~	"Kvinde",
TRUE ~ as.factor(NA))
)
View(df_clean)
df_clean <- df %>%
transmute(
polint = ifelse(polintr %in% 1:4, 5 - polintr, polintr), # reverse scale
tillid_fn = trstun,
kon = case_when(
gndr == 1 ~	"Mand",
gndr == 2 ~	"Kvinde",
TRUE ~ as.factor(NA)),
alder = agea
)
df_clean <- df %>%
transmute(
pol_int = ifelse(polintr %in% 1:4, 5 - polintr, polintr), # reverse scale
tillid_fn = trstun,
kon = case_when(
gndr == 1 ~	"Mand",
gndr == 2 ~	"Kvinde",
TRUE ~ as.factor(NA)),
alder = agea
)
getwd()
setwd("C:/Users/mmn/Dropbox/Ilisimatusarfik/Eksamen/reeksamen_samf")
library(haven)
# Example with a labelled variable
df_clean$pol_intr <- labelled(df_clean$pol_intr,
labels = c("Slet ikke interesseret" = 1,
"Lidt interesseret" = 2,
"Ret interesseret" = 3,
"Meget interesseret" = 4))
# Example with a labelled variable
df_clean$pol_int <- labelled(df_clean$pol_int,
labels = c("Slet ikke interesseret" = 1,
"Lidt interesseret" = 2,
"Ret interesseret" = 3,
"Meget interesseret" = 4))
tabyl(df$pol_int)
tabyl(df_clean$pol_int)
df_clean <- df_clean %>%
mutate(across(everything(), ~ {attr(.x, "label") <- NULL; .x}))
################################################################################
# Save dataset
saveRDS(df_clean, file = "C:/Users/mmn/Dropbox/Ilisimatusarfik/Eksamen/reeksamen_samf/Reeksamensdata_samf_F25.rds")
################################################################################
# Save dataset
saveRDS(df_clean, file = "C:/Users/mmn/Dropbox/Ilisimatusarfik/Eksamen/reeksamen_samf/Reeksamensdata_samf_Feb2025.rds")
################################################################################
#               Besvarelse af reeksamen for SAMF Feb. 2025
################################################################################
setwd("C:/Users/mmn/Dropbox/Ilisimatusarfik/Eksamen/reeksamen_samf")
df <- readRds("Reeksamensdata_samf_Feb2025.rds")
df <- readRDS("Reeksamensdata_samf_Feb2025.rds")
df <- readRDS("Reeksamensdata_samf_Feb2025.rds")
View(df)
library(janitor)
tabyl(df$polintr)
tabyl(df$pol_int)
tabyl(df, pol_int)
library(janitor)
tabyl(df, pol_int)
# •	Lav et søjlediagram (univariat barplot) for variablen polintr
library(ggplot2)
ggplot(df) +
aes(x = factor(pol_int)) +  # Omform cyl til en kategorisk variabel
geom_bar(fill = "#003366") +
labs(
title = "Antal biler pr. antal cylindere",
x = "Antal cylindre",
y = "Antal biler"
) +
theme_minimal()
ggplot(df) +
aes(x = factor(pol_int)) +  # Omform cyl til en kategorisk variabel
geom_bar(fill = "#003366") +
labs(
title = "Antal biler pr. antal cylindere",
x = "Politisk interesse (1 (slet ikke interesseret) til 4 (Meget interesseret))",
y = "Antal respondenter"
) +
theme_minimal()
ggplot(df) +
aes(x = factor(pol_int)) +  # Omform cyl til en kategorisk variabel
geom_bar(fill = "#003366") +
labs(
title = "Antal biler pr. antal cylindere",
x = "Politisk interesse: 1 (slet ikke interesseret) til 4 (Meget interesseret))",
y = "Antal respondenter"
) +
theme_minimal()
################################################################################
# Save dataset
saveRDS(df_clean, file = "C:/Users/mmn/Dropbox/Ilisimatusarfik/Eksamen/reeksamen_samf/Reeksamensdata_samf_Feb2025.rds")
pacman::p_load(tidyverse, dplyr, tidyr, haven, ggplot2, janitor, tibble, haven)
setwd("C:/Users/mmn/Dropbox/Ilisimatusarfik/Eksamen/reeksamen_samf")
df <- read_dta("C:/Users/mmn/Dropbox/Ilisimatusarfik/R/Ilisimatusarfik_Statistik_EO_F24/Data/ESS2/ESS2.dta")
tabyl(df$cntry)
# Land
df <- df %>%
filter(cntry == "NO")
df <- df %>% select(polintr, trstun, gndr, agea)
######### Missing
missing_values <- colSums(is.na(df))
missing_df <- data.frame(variable = names(missing_values), count = missing_values)
# Plot missing values
ggplot(missing_df, aes(x = variable, y = count)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Missing Values by Variable",
x = "Variables",
y = "Number of Missing Values") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text(aes(label = count), vjust = -0.3)  # Add labels on top of bars
##### Erase all missing values
columns_no_na <- c(1, 2, 3, 4)
df <- df[complete.cases(df[, columns_no_na]), ]
################################################################################
# MUTATE
df$polintr <- polintr = ifelse(polintr %in% 1:4, 5 - polintr, polintr) # reverse scale
View(df)
df$polintr <- df$polintr = ifelse(df$polintr %in% 1:4, 5 - df$polintr, df$polintr) # reverse scale
# Creating a new variable with the reversed scale
df$interesse <- ifelse(df$polintr %in% 1:4, 5 - df$polintr, df$polintr)
df_clean <- df %>%
transmute(
pol_int = case_when(
interesse == 1 ~	"Slet ikke",
interesse == 2 ~	"Næsten ikke",
interesse == 3 ~ "Ret interesseret",
interesse == 4 ~ "Meget interesseret",
TRUE ~ as.factor(NA)),
tillid_fn = trstun,
kon = case_when(
gndr == 1 ~	"Mand",
gndr == 2 ~	"Kvinde",
TRUE ~ as.factor(NA)),
alder = agea
)
library(haven)
df_clean <- df_clean %>%
mutate(across(everything(), ~ {attr(.x, "label") <- NULL; .x}))
################################################################################
# Save dataset
saveRDS(df_clean, file = "C:/Users/mmn/Dropbox/Ilisimatusarfik/Eksamen/reeksamen_samf/Reeksamensdata_samf_Feb2025.rds")
################################################################################
#               Besvarelse af reeksamen for SAMF Feb. 2025
################################################################################
setwd("C:/Users/mmn/Dropbox/Ilisimatusarfik/Eksamen/reeksamen_samf")
df <- readRDS("Reeksamensdata_samf_Feb2025.rds")
library(janitor)
tabyl(df, pol_int)
df_clean <- df %>%
transmute(
pol_int = factor(case_when(
interesse == 1 ~ "Slet ikke",
interesse == 2 ~ "Næsten ikke",
interesse == 3 ~ "Ret interesseret",
interesse == 4 ~ "Meget interesseret",
TRUE ~ NA_character_),
levels = c("Slet ikke", "Næsten ikke", "Ret interesseret", "Meget interesseret")),
tillid_fn = trstun,
kon = factor(case_when(
gndr == 1 ~ "Mand",
gndr == 2 ~ "Kvinde",
TRUE ~ NA_character_),
levels = c("Mand", "Kvinde")),
alder = agea
)
# Creating a new variable with the reversed scale
df$interesse <- ifelse(df$polintr %in% 1:4, 5 - df$polintr, df$polintr)
df <- read_dta("C:/Users/mmn/Dropbox/Ilisimatusarfik/R/Ilisimatusarfik_Statistik_EO_F24/Data/ESS2/ESS2.dta")
tabyl(df$cntry)
# Land
df <- df %>%
filter(cntry == "NO")
df <- df %>% select(polintr, trstun, gndr, agea)
######### Missing
missing_values <- colSums(is.na(df))
missing_df <- data.frame(variable = names(missing_values), count = missing_values)
# Plot missing values
ggplot(missing_df, aes(x = variable, y = count)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Missing Values by Variable",
x = "Variables",
y = "Number of Missing Values") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text(aes(label = count), vjust = -0.3)  # Add labels on top of bars
##### Erase all missing values
columns_no_na <- c(1, 2, 3, 4)
df <- df[complete.cases(df[, columns_no_na]), ]
################################################################################
# MUTATE
# Creating a new variable with the reversed scale
df$interesse <- ifelse(df$polintr %in% 1:4, 5 - df$polintr, df$polintr)
library(dplyr)
df_clean <- df %>%
transmute(
pol_int = factor(case_when(
interesse == 1 ~ "Slet ikke",
interesse == 2 ~ "Næsten ikke",
interesse == 3 ~ "Ret interesseret",
interesse == 4 ~ "Meget interesseret",
TRUE ~ NA_character_),
levels = c("Slet ikke", "Næsten ikke", "Ret interesseret", "Meget interesseret")),
tillid_fn = trstun,
kon = factor(case_when(
gndr == 1 ~ "Mand",
gndr == 2 ~ "Kvinde",
TRUE ~ NA_character_),
levels = c("Mand", "Kvinde")),
alder = agea
)
library(haven)
df_clean <- df_clean %>%
mutate(across(everything(), ~ {attr(.x, "label") <- NULL; .x}))
################################################################################
# Save dataset
saveRDS(df_clean, file = "C:/Users/mmn/Dropbox/Ilisimatusarfik/Eksamen/reeksamen_samf/Reeksamensdata_samf_Feb2025.rds")
df <- readRDS("Reeksamensdata_samf_Feb2025.rds")
tabyl(df, pol_int)
ggplot(df) +
aes(x = factor(pol_int)) +  # Omform cyl til en kategorisk variabel
geom_bar(fill = "#003366") +
labs(
title = "Antal biler pr. antal cylindere",
x = "Politisk interesse: 1 (slet ikke interesseret) til 4 (Meget interesseret))",
y = "Antal respondenter"
) +
theme_minimal()
ggplot(df) +
aes(x = factor(pol_int)) +  # Omform cyl til en kategorisk variabel
geom_bar(fill = "#003366") +
labs(
title = "Antal biler pr. antal cylindere",
x = "Politisk interesse",
y = "Antal respondenter"
) +
theme_minimal()
names(df)
summary(df$tillid_fn)
sd(df$tillid_fn, na.rm = TRUE)
t.test(df$tillid_fn)
tabyl(df$kon)
# Udfør t-test
ttest_resultat_bivariat <- t.test(tillid_fn ~ kon, data = df)
# Opret en tabel med resultaterne
(ttest_tabel_bivariat <- data.frame(
Parameter = c("Gennemsnit Gruppe 1",        # Gennemsnit for første gruppe
"Gennemsnit Gruppe 2",        # Gennemsnit for anden gruppe
"Test-statistik",             # Teststatistikken (t-værdien)
"P-værdi",                    # P-værdien
"Nedre konfidensinterval",    # Nedre konfidensinterval
"Øvre konfidensinterval",     # Øvre konfidensinterval
"Frihedsgrader"),             # Frihedsgrader (df)
Værdi = c(
round(ttest_resultat_bivariat$estimate[1], 2),     # Gennemsnittet for første gruppe afrundet til 3 decimaler
round(ttest_resultat_bivariat$estimate[2], 2),     # Gennemsnittet for anden gruppe afrundet til 3 decimaler
round(ttest_resultat_bivariat$statistic, 3),       # Teststatistikken afrundet til 3 decimaler
sprintf("%.4f", ttest_resultat_bivariat$p.value),  # P-værdien med 4 decimaler
round(ttest_resultat_bivariat$conf.int[1], 3),     # Nedre konfidensinterval afrundet til 3 decimaler
round(ttest_resultat_bivariat$conf.int[2], 3),     # Øvre konfidensinterval afrundet til 3 decimaler
round(ttest_resultat_bivariat$parameter, 1)        # Frihedsgrader afrundet til 1 decimal
)
))
ttest_resultat_bivariat
# Opret en tabel med resultaterne
(ttest_tabel_bivariat <- data.frame(
Parameter = c("Gennemsnit Gruppe 1",        # Gennemsnit for første gruppe
"Gennemsnit Gruppe 2",        # Gennemsnit for anden gruppe
"Test-statistik",             # Teststatistikken (t-værdien)
"P-værdi",                    # P-værdien
"Nedre konfidensinterval",    # Nedre konfidensinterval
"Øvre konfidensinterval",     # Øvre konfidensinterval
"Frihedsgrader"),             # Frihedsgrader (df)
Værdi = c(
round(ttest_resultat_bivariat$estimate[1], 2),     # Gennemsnittet for første gruppe afrundet til 3 decimaler
round(ttest_resultat_bivariat$estimate[2], 2),     # Gennemsnittet for anden gruppe afrundet til 3 decimaler
round(ttest_resultat_bivariat$statistic, 3),       # Teststatistikken afrundet til 3 decimaler
sprintf("%.4f", ttest_resultat_bivariat$p.value),  # P-værdien med 4 decimaler
round(ttest_resultat_bivariat$conf.int[1], 3),     # Nedre konfidensinterval afrundet til 3 decimaler
round(ttest_resultat_bivariat$conf.int[2], 3),     # Øvre konfidensinterval afrundet til 3 decimaler
round(ttest_resultat_bivariat$parameter, 1)        # Frihedsgrader afrundet til 1 decimal
)
))
tabyl(df,
tabyl(df, kon, pol_int.)
library(janitor)
library(janitor)
tabyl(df, kon, pol_int.)
tabyl(df, kon, pol_int)
tabyl(df, kon, pol_int)
krydstabel <- table(as.character(df$kon),
as.character(df$pol_int))
library(DescTools)
CramerV(krydstabel)
CramerV(krydstabel)
ry(dplyr)
# Udfør chi²-test
chi_resultat_bivariat <- df %>%
select(kon, pol_int) %>%
na.omit() %>%
tabyl(kon, pol_int) %>%
chisq.test()
# Opret en data frame med chi²-testens resultater
(chi_tabel_bivariat <- data.frame(
Parameter = c("Chi²-statistik",              # Testens Chi²-statistik
"Frihedsgrader",              # Frihedsgrader (df)
"P-værdi"),                   # P-værdi
Værdi = c(
round(chi_resultat_bivariat$statistic, 3),         # Chi²-statistikken afrundet til 3 decimaler
chi_resultat_bivariat$parameter,                   # Frihedsgrader
sprintf("%.4f", chi_resultat_bivariat$p.value)    # P-værdien formatteret til 4 decimaler
)))
ggplot(df) +
aes(x = factor(pol_int)) +  # Omform cyl til en kategorisk variabel
geom_bar(fill = "#003366") +
labs(
title = "Politisk interesse i Norge",
x = "Politisk interesse",
y = "Antal respondenter"
) +
theme_minimal()
library(broom)
class(df$tillid_fn)
model <- lm(as.numeric(tillid_fn) ~ kon + alder, data = df)
tidy(model)
tabyl(df$pol_int)
setwd("C:/Users/mmn/Dropbox/Ilisimatusarfik/Eksamen/reeksamen_samf")
df <- readRDS("Reeksamensdata_samf_Feb2025.rds")
View(df)
library(janitor)
tabyl(df, pol_int)
ggplot(df) +
aes(x = factor(pol_int)) +  # Omform cyl til en kategorisk variabel
geom_bar(fill = "#003366") +
labs(
title = "Politisk interesse i Norge",
x = "Politisk interesse",
y = "Antal respondenter"
) +
theme_minimal()
summary(df$tillid_fn)
sd(df$tillid_fn, na.rm = TRUE)
t.test(df$tillid_fn)
# Udfør t-test
ttest_resultat_bivariat <- t.test(tillid_fn ~ kon, data = df)
# Opret en tabel med resultaterne
(ttest_tabel_bivariat <- data.frame(
Parameter = c("Gennemsnit Gruppe 1",        # Gennemsnit for første gruppe
"Gennemsnit Gruppe 2",        # Gennemsnit for anden gruppe
"Test-statistik",             # Teststatistikken (t-værdien)
"P-værdi",                    # P-værdien
"Nedre konfidensinterval",    # Nedre konfidensinterval
"Øvre konfidensinterval",     # Øvre konfidensinterval
"Frihedsgrader"),             # Frihedsgrader (df)
Værdi = c(
round(ttest_resultat_bivariat$estimate[1], 2),     # Gennemsnittet for første gruppe afrundet til 3 decimaler
round(ttest_resultat_bivariat$estimate[2], 2),     # Gennemsnittet for anden gruppe afrundet til 3 decimaler
round(ttest_resultat_bivariat$statistic, 3),       # Teststatistikken afrundet til 3 decimaler
sprintf("%.4f", ttest_resultat_bivariat$p.value),  # P-værdien med 4 decimaler
round(ttest_resultat_bivariat$conf.int[1], 3),     # Nedre konfidensinterval afrundet til 3 decimaler
round(ttest_resultat_bivariat$conf.int[2], 3),     # Øvre konfidensinterval afrundet til 3 decimaler
round(ttest_resultat_bivariat$parameter, 1)        # Frihedsgrader afrundet til 1 decimal
)
))
tabyl(df, kon, pol_int)
