theme_minimal()
library(Cairo)
ggsave("mit_plot.png", plot = mit_ggplot_objekt, width = 10, height = 8, device = CairoPNG)
ggsave("mit_plot.png", plot = mit_ggplot_objekt, width = 10, height = 8)
ggsave("mit_plot.png", plot = mit_ggplot_objekt, width = 10, height = 8, type="cairo")
ggsave("mit_plot.png", plot = mit_ggplot_objekt, type="cairo")
mit_ggplot_objekt <- ggplot(mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
geom_smooth(method = "lm", color = "blue", se = FALSE) +  # Tilføjer en lineær regressionslinje
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
ggsave("mit_plot.png", plot = mit_ggplot_objekt, type="cairo")
ggsave("mit_plot.png", plot = mit_ggplot_objekt, width = 10, height = 8, device = CairoPNG)
ggsave("mit_plot.png", plot = mit_ggplot_objekt, type = "cairo-png")
mit_ggplot_objekt <- ggplot(mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
geom_smooth(method = "lm", color = "blue", se = FALSE) +  # Tilføjer en lineær regressionslinje
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
library(Cairo)
ggsave("mit_plot.png", plot = mit_ggplot_objekt, type = "cairo-png")
ggsave("mit_plot.png", plot = mit_ggplot_objekt, width = 10, height = 8, device = ragg::agg_png)
mit_ggplot_objekt <- ggplot(mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
geom_smooth(method = "lm", color = "blue", se = FALSE) +  # Tilføjer en lineær regressionslinje
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
ggsave("mit_plot.png", plot = mit_ggplot_objekt, width = 10, height = 8, device = ragg::agg_png)
ggsave("mit_plot.png", p, device = ragg::agg_png, res = 300, units = "in")
ggsave("mit_plot.png",  plot = mit_ggplot_objekt, device = ragg::agg_png, res = 300, units = "in")
ggsave(plot= mit_ggplot_objekt, file = "mit_plot.png")
mit_ggplot_objekt <- ggplot(mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
geom_smooth(method = "lm", color = "blue", se = FALSE) +  # Tilføjer en lineær regressionslinje
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
mit_ggplot_objekt <- ggplot(mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
geom_smooth(method = "lm", color = "blue", se = FALSE) +  # Tilføjer en lineær regressionslinje
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
png("mit_plot.png", width = 1000, height = 800, res = 150)  # Set width, height, and resolution
print(mit_ggplot_objekt)  # Print the plot to the file
dev.off()  # Close the device
mit_ggplot_objekt <- ggplot(mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
geom_smooth(method = "lm", color = "blue", se = FALSE) +  # Tilføjer en lineær regressionslinje
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
ggsave("mit_plot.png", plot = mit_ggplot_objekt, width = 10, height = 8)
ggsave("mit_plot.jpeg", plot = mit_ggplot_objekt, width = 10, height = 8)
mit_ggplot_objekt <- ggplot(mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
geom_smooth(method = "lm", color = "blue", se = FALSE) +  # Tilføjer en lineær regressionslinje
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
# Gem mit plot i R-project mappen på computeren
ggsave("mit_plot.jpeg", plot = mit_ggplot_objekt, width = 10, height = 8)
df <- readRDS("firma_data.rds")
getwd()
firma_data <- readRDS("C:/Users/mmn/Dropbox/Ilisimatusarfik/firma_data.rds")
df <- readRDS("Undervisningsdokumenter/E24/Slides/firma_data.rds")
df <- readRDS("/Undervisningsdokumenter/E24/Slides/firma_data.rds")
getwd()
df <- readRDS("firma_data.rds")
names(df)
tabyl(df$tilfredshed)
library(janitor)
tabyl(df$tilfredshed)
library(ggplot2)
ggplot(df) +
aes(x = factor(tilfredshed)) +
geom_bar() +
labs(
title = "Tilfredshed med omsætning",
x = "Tilfredshed",
y = "Antal firmaer"
) +
theme_minimal()
library(DescTools)
(mode <- Mode(df$industri, na.rm = TRUE))
Mean(df$omsaetning)
Median(df$omsaetning)
ggplot(df, aes(x = omsaetning)) + # Variabel = omsaetning
geom_boxplot() +  # Opretter et boxplot
theme_minimal() + # Tema
scale_x_continuous(breaks = # Definerer x-aksen
seq(min(50000),
max(1000000),
by = 100000)) +
labs(
x = "Omsætning (DKK)") + # Tilføjer en brugerdefineret titel til x-aksen
theme(
axis.text.y = element_blank(),  # Fjerner værdierne på y-aksen
axis.ticks.y = element_blank(),  # Fjerner stregmarkeringer på y-aksen
text = element_text(size = 14)) +  # Gør skriften større
coord_fixed(ratio = 300000)  # Justér på højden af boksplottet
ggplot(df, aes(x = omsaetning)) + # Variabel = omsaetning
geom_boxplot() +  # Opretter et boxplot
theme_minimal()
ggplot(df, aes(x = ansatte)) + # Variabel = omsaetning
geom_boxplot() +  # Opretter et boxplot
theme_minimal()
ggplot(df, aes(x = ansatte)) + # Variabel = omsaetning
geom_boxplot() +  # Opretter et boxplot
theme_minimal()
ggplot(mtcars) +
aes(x = "", y = mpg) +  # "" for at undgå en x-akse kategori, og y for at angive mpg
geom_boxplot(fill = "#003366", color = "black") +  # Ændring af farver
labs(
title = "Boksplot af brændstoføkonomi",
x = "",  # Tomt for at undgå en x-akse etiket
y = "Miles per gallon (mpg)"
) +
theme_minimal()
avn <- "Mikkeline"
# Her er min alder
alder <- 27
# Her indlæses firma-datasættet
df_firma <- readRDS("firma_data.rds")
View(df_firma)
names(df_firma)
# Lav en ny variabel, der måler omsaetning i 1.000 kr
(df <- df %>% mutate(omsaetning_1000 = omsaetning/1000))
library(tidyverse)
library(dplyr)
# Lav en ny variabel, der måler omsaetning i 1.000 kr
(df <- df %>% mutate(omsaetning_1000 = omsaetning/1000))
# Lav en ny variabel, der måler omsaetning i 1.000 kr
(df_firma <- df_firma %>% mutate(omsaetning_1000 = omsaetning/1000))
# Lav en dikotom variabel der tager værdien 1, hvis firmaerne har erklæret sig “tilfreds” eller “meget tilfreds” med deres omsætning, ellers skal den tage værdien 0
df_firma <- df_firma %>%
mutate(tilfreds_binear = ifelse(tilfredshed %in% c("Tilfreds", "Meget tilfreds"), 1, 0))
# Lav et nyt datasæt kun med virksomheder fra sundhedsindustrien
df_sunhed <- df_firma %>% filter(industri=="Sundhed")
# Lav et nyt datasæt kun med firmaer, der har erklæret sig “tilfreds” eller “meget tilfreds” med deres omsætning (dvs. firmaer med værdien 1 på den variabel I lavede ovenfor)
df_sunhed <- df_firma %>% filter(tilfreds_binear==1)
navn <- "Mikkeline"
alder <- 27
df_firma <- readRDS("firma_data.rds")
View(df_firma)
names(df_firma)
library(tidyverse)
library(dplyr)
df_firma <- df_firma %>% mutate(omsaetning_1000 = omsaetning/1000)
getwd()
mit_tal <- 2
df <- readRDS("firma_data.rds")
df <- clean_names(df)
library(janitor)
df <- clean_names(df)
names(df)
df <- data.frame(
køn = c("Mand", "Kvinde", "Mand", "Kvinde"),
tid = c(2020, 2020, 2021, 2021),
"Befolkningen 1. januar" = c(2750000, 2850000, 2780000, 2870000)
)
names(df)
df <- clean_names(df)
names(df)
df <- df %>% rename(koen = kon)
library(tidyverse)
library(tidyverse)
df <- df %>% rename(koen = kon)
names(df)
names(df)
df <- data.frame(
køn = c("Mand", "Kvinde", "Mand", "Kvinde"),
tid = c(2020, 2020, 2021, 2021),
"Befolkningen 1. januar" = c(2750000, 2850000, 2780000, 2870000)
)
names(df)
df <- clean_names(df)
names(df)
df <- df %>% rename(koen = kon)
names(df)
library(tidyverse)
df <- df %>% rename(koen = kon)
mit_foerste_objekt <- "Hello world!"
mit_foerste_objekt
mit_tal <- 2
mit_tal + 2
resultat <- mit_tal + 2
resultat
getwd()
df <- readRDS("firma_data.rds")
names(df)
names(df)
library(janitor)
df <- clean_names(df)
names(df)
names(df)
names(df)
df <- data.frame(
køn = c("Mand", "Kvinde", "Mand", "Kvinde"),
tid = c(2020, 2020, 2021, 2021),
"Befolkningen 1. januar" = c(2750000, 2850000, 2780000, 2870000)
)
df_ESS <- readRDS("Undervisningsdokumenter/E24/slides/data/ESS.rds") # Her hentes datasættet  # Her hentes datasættet fra en undermappe i min projektmappe, der hedder Data.
df <- readRDS("Undervisningsdokumenter/E24/slides/data/ESS.rds")
df <- readRDS("ESS.rds")
library(tidyverse)
df <- df %>% select(koen, alder, udd, net_indkomst)
df <- df %>% select(koen, alder, udd, net_indkomst)
names(df)
ggplot(mtcars) +
aes(x = factor(cyl)) +  # Omform cyl til en kategorisk variabel
geom_bar() +
labs(
title = "Antal biler pr. antal cylindere",
x = "Antal cylindre",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = mpg) +
geom_histogram() +
labs(
title = "Histogram af brændstoføkonomi",
x = "Miles per gallon (mpg)",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = "", y = mpg) +  # "" for at undgå en x-akse kategori, og y for at angive mpg
geom_boxplot(fill = "#003366", color = "black") +  # Ændring af farver
labs(
title = "Boksplot af brændstoføkonomi",
x = "",  # Tomt for at undgå en x-akse etiket
y = "Miles per gallon (mpg)"
) +
theme_minimal()
names(mtcars)
(mtcars)
mtcars
mit_foerste_objekt <- "Hello world!"
mit_foerste_objekt
mit_tal <- 2
mit_tal
mit_tal + 2
resultat <- mit_tal + 2
resultat
getwd()
df <- readRDS("firma_data.rds")
names(df)
df <- data.frame(
køn = c("Mand", "Kvinde", "Mand", "Kvinde"),
tid = c(2020, 2020, 2021, 2021),
"Befolkningen 1. januar" = c(2750000, 2850000, 2780000, 2870000)
)
names(df)
library(janitor)
df <- clean_names(df)
names(df)
library(tidyverse)
df <- df %>% rename(koen = kon)
names(df)
df <- readRDS("Undervisningsdokumenter/E24/slides/data/ESS.rds")
library(tidyverse)
df <- df %>% select(koen, alder, udd, net_indkomst)
names(df)
df <- df %>% mutate(alder2 = alder^2)
df <- df %>%
mutate(myndig = if_else(alder >= 18,
"Myndig", # Kategori vis den binære betingelse er sand.
"Ikke myndig")) # Kategori hvis den binære betingelse ikke er sand.
View(df)
library(janitor)
tabyl(df, industri)
tabyl(df, udd)
min_tabel <- tabyl(df, udd)
library(writexl)
install.packages("writexl")
library(writexl)
write_xlsx(list("Min tabel" = min_tabel), "min_tabel.xlsx")
getwd()
write_xlsx(list("Min tabel" = min_tabel), "min_tabel.xlsx")
names(df)
library(DescTools)
library(DescTools)
(mode <- Mode(df$udd, na.rm = TRUE))
(mode <- Mode(df$udd, na.rm = TRUE))
Mode(df$udd, na.rm = TRUE)
tabyl(df$udd)
Mean(df$net_indkomst, na.rm = T)}
Mean(df$net_indkomst, na.rm = T)
summary(df$net_indkomst)
Mean(df$alder, na.rm = T)
summary(df$alder)
Median(df$alder, na.rm=T)
Var(df$alder)
Var(df$alder, na.rm = TRUE)
Sd(df$alder)
sd(df$alder, na.rm = TRUE)
quantile(df$alder, probs = c(0.25, 0.5, 0.75), na.rm = TRUE)
sd(df$alder, na.rm = TRUE)
mit_foerste_objekt <- "Hello world!"
mit_foerste_objekt
mit_tal <- 2
mit_tal
mit_tal + 2
resultat <- mit_tal + 2
resultat
getwd()
df <- readRDS("firma_data.rds")
names(df)
df <- data.frame(
køn = c("Mand", "Kvinde", "Mand", "Kvinde"),
tid = c(2020, 2020, 2021, 2021),
"Befolkningen 1. januar" = c(2750000, 2850000, 2780000, 2870000)
)
names(df)
library(janitor)
df <- clean_names(df)
names(df)
library(tidyverse)
df <- df %>% rename(koen = kon)
names(df)
df <- readRDS("Undervisningsdokumenter/E24/slides/data/ESS.rds")
library(tidyverse)
df <- df %>% select(koen, alder, udd, net_indkomst)
names(df)
df <- df %>% mutate(alder2 = alder^2)
df <- df %>%
mutate(myndig = if_else(alder >= 18,
"Myndig", # Kategori vis den binære betingelse er sand.
"Ikke myndig")) # Kategori hvis den binære betingelse ikke er sand.
df <- df %>%
mutate(alder_kategori = case_when(
between(alder, 15, 35) ~ "15-35 år",
between(alder, 36, 55) ~ "36-55år ",
between(alder, 56, 75) ~ "56-75 år",
alder > 75 ~ "75 +"
))
df <- df %>% mutate(gender = fct_recode(koen, "Male" = "Mand", "Female" = "Kvinde"))
ny_df <- df %>% select(koen, net_indkomst)
kvinde_df <- df %>% filter(koen=="Kvinde")
mtcars
ggplot(mtcars) +
aes(x = factor(cyl)) +  # Omform cyl til en kategorisk variabel
geom_bar() +
labs(
title = "Antal biler pr. antal cylindere",
x = "Antal cylindre",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl)) +  # Omform cyl til en kategorisk variabel
geom_bar(fill = "#003366") +
labs(
title = "Antal biler pr. antal cylindere",
x = "Antal cylindre",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = mpg) +
geom_histogram() +
labs(
title = "Histogram af brændstoføkonomi",
x = "Miles per gallon (mpg)",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = mpg) +
geom_histogram(fill = "#003366") +
labs(
title = "Histogram af brændstoføkonomi",
x = "Miles per gallon (mpg)",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = "", y = mpg) +  # "" for at undgå en x-akse kategori, og y for at angive mpg
geom_boxplot(fill = "#003366", color = "black") +  # Ændring af farver
labs(
title = "Boksplot af brændstoføkonomi",
x = "",  # Tomt for at undgå en x-akse etiket
y = "Miles per gallon (mpg)"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl), fill = factor(gear)) +
geom_bar(position = "dodge") +
labs(
title = "Fordeling af biler pr. cylinder og gear",
x = "Antal cylindre",
y = "Antal biler",
fill = "Antal gear"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl), y = mpg) +
geom_boxplot() +
labs(
title = "Brændstoføkonomi pr. cylinder",
x = "Antal cylindre",
y = "Miles per gallon"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = wt, y = mpg) +
geom_point() +
geom_smooth(method = "lm", color = "blue", se = FALSE) +  # Tilføjer en lineær regressionslinje
labs(
title = "Sammenhæng mellem vægt og brændstoføkonomi",
x = "Vægt (1000 lbs)",
y = "Miles per gallon"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = mpg) +
geom_histogram(color = "#003366") +
labs(
title = "Histogram af brændstoføkonomi",
x = "Miles per gallon (mpg)",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = mpg) +
geom_histogram(fill = "#003366") +
labs(
title = "Histogram af brændstoføkonomi",
x = "Miles per gallon (mpg)",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl)) +  # Omform cyl til en kategorisk variabel
geom_bar(fill = "#003366") +
labs(
title = "Antal biler pr. antal cylindere",
x = "Antal cylindre",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl)) +  # Omform cyl til en kategorisk variabel
geom_bar(fill = "#003366") +
labs(
title = "Antal biler pr. antal cylindere",
x = "Antal cylindre",
y = "Antal biler"
) +
theme_minimal()
ggplot(mtcars) +
aes(x = factor(cyl)) +  # Omform cyl til en kategorisk variabel
geom_bar(fill = "#003366") +
labs(
title = "Antal biler pr. antal cylindere",
x = "Antal cylindre",
y = "Antal biler"
) +
theme_minimal()
library(ggplot)
library(ggplot2)
ggplot(mtcars) +
aes(x = factor(cyl)) +  # Omform cyl til en kategorisk variabel
geom_bar(fill = "#003366") +
labs(
title = "Antal biler pr. antal cylindere",
x = "Antal cylindre",
y = "Antal biler"
) +
theme_minimal()
